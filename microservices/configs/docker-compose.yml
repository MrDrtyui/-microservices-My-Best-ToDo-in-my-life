networks:
  out-net:
    driver: bridge
  into-net:
    driver: bridge 

services:
  api-gateway:
    build:
      context: ../api-gateway/
      dockerfile: dockerfile
    container_name: api-gateway
    hostname: api-gateway
    ports:
      - "3000:3000"
    networks: 
      - into-net
    env_file:
      - ./.env.apigateway
    depends_on:
      - auth-ms

  user-db:
    image: postgres:16
    container_name: db-user
    env_file:
      ./.env.user
    ports:
      -  "5434:5432"
    networks:
      - into-net

  todo-db:
    image: postgres:16
    container_name: todo-db
    env_file:
      ./.env.todo
    ports:
      -  "5433:5432"
    networks:
      - into-net
    volumes:
      - todo-db-data:/var/lib/postgresql/data

  push-db:
    image: postgres:16
    container_name: push-db
    env_file:
      ./.env.push
    ports:
      -  "5035:5432"
    networks:
      - into-net

  auth-db:
    image: postgres:16
    container_name: auth-db
    hostname: auth-db
    env_file: 
      ./.env.auth
    ports:
      -  "5432:5432"
    networks:
      - into-net
    volumes:
      - auth-db-data:/var/lib/postgresql/data

  auth-ms:
    build: 
      context: ../services/auth-ms/
      dockerfile: dockerfile
    container_name: auth-ms
    hostname: auth-ms
    ports: 
      - "3011:3000"
    networks:
      - into-net
    env_file:
      - ./.env.auth
    depends_on:
      - redis-sessions
      - auth-db

  redis-sessions:
    image: redis:7
    container_name: redis-sessions
    restart: always
    env_file: ./.env.redis.sessions
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "8001:8001"
    networks:
      - into-net
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf


  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:7.2.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true

volumes:
  redis_data:
  auth-db-data:
  todo-db-data: 
  kafka-data:
